{"version":3,"sources":["constants/actions.js","actions/restClient.js","history.js","actions/userActions.js","utils/toaster.js","actions/roomActions.js","components/topbar/CreateRoom.js","components/topbar/Logo.js","utils/userNickname.js","components/topbar/TopbarUserListItem.js","components/topbar/TopbarUserList.js","components/topbar/Topbar.js","components/content/MonacoEditor.js","components/room/PrivateRoom.js","components/sidebar/UserListItem.js","components/sidebar/item/SidebarTitle.js","components/sidebar/UserList.js","components/sidebar/settings/ThemeToggler.js","actions/themeActions.js","components/sidebar/settings/ToggleLiveExecution.js","actions/executionActions.js","utils/execute.js","components/sidebar/settings/ExecuteButton.js","components/sidebar/RoomSettings.js","components/sidebar/Sidebar.js","actions/codeActions.js","utils/output.js","components/content/Console.js","components/room/PrivateRoomContainer.js","utils/client-sockets.js","components/room/PublicRoom.js","Modal.js","components/room/PublicRoomContainer.js","App.js","reducers/themeReducer.js","reducers/languageReducer.js","reducers/roomReducer.js","reducers/userReducer.js","reducers/executionReducer.js","reducers/codeReducer.js","reducers/rootReducer.js","index.js"],"names":["Actions","SET_THEME","SET_LANGUAGE","SET_ROOM_DATA","SET_ROOM_USERS","UPDATE_USER_CURSOR_COORDINATES","ADD_USER_TO_ROOM","REMOVE_USER_FROM_ROOM","SET_USER","SET_USER_ID","SET_USER_ROOM_INFO","SET_USER_NAME","SET_LIVE_EXECUTION","SET_CODE","get","url","a","encodedUrl","encodeURI","fetch","method","response","resolveResponse","post","body","headers","Accept","JSON","stringify","json","status","Promise","resolve","reject","createBrowserHistory","basename","setUserRoomInfo","data","dispatch","type","nofifyConfig","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","notifyError","message","toast","error","notifyInfo","info","Room","CreateRoom","props","useState","roomName","setRoomName","id","className","value","placeholder","onChange","e","target","onClick","preventDefault","history","push","roomId","createRoom","Logo","alt","src","getUserNickname","name","length","splitted","split","TopbarUserListItem","user","style","backgroundColor","color","TopbarUserList","users","map","index","key","Topbar","useDispatch","useSelector","state","room","userRoomInfo","validated","MonacoEditor","updateCode","code","monacoInstance","setMonacoInstance","decorations","setDecorations","theme","language","useEffect","editorRef","ranges","filter","cursorCoordinates","coord","range","Range","lineNumber","column","options","inlineClassName","newDeco","current","deltaDecorations","monaco","init","then","catch","console","editorValue","useRef","onKeyUp","getPosition","height","width","editorDidMount","_editorValue","_editorRef","minimap","enabled","smoothScrolling","scrollbar","verticalScrollbarSize","horizontalScrollbarSize","PrivateRoom","canEdit","UserListItem","SidebarTitle","icon","title","UserList","userId","ThemeToggler","isActive","onToggle","toggleTheme","inactiveLabel","activeLabel","ToggleLiveExecution","liveExecution","executeCode","document","getElementById","innerHTML","Function","fn","err","log","ExecuteButton","RoomSettings","Sidebar","roomData","updateCodeInStore","overrideConsole","i","arguments","consoleItem","getConsoleItem","outputToConsole","appendChild","createElement","Array","isArray","arr","listItem","forEach","consoleCondition","getArrayConsoleItem","obj","keys","Object","getVariableSpanInnerHTML","getObjectConsoleItem","text","spanItem","getSpanItem","deep","getArrayConsoleItemInnerHTML","repeat","getObjectConsoleItemInnerHTML","getSpanItemInnerHTML","Console","PrivateRoomContainer","ENDPOINT","window","location","hostname","socket","openSocket","PublicRoom","emit","emitJoinRoom","callback","addUserToRoom","addUser","on","onJoinRoom","setRoomData","setRoom","roomInfo","setUserId","onRecieveCode","updateUserCursorCordinates","onUserDisconnect","removeUserFromRoom","removeUser","warning","newCode","emitTyping","Modal","setName","handleOk","showHideClassName","show","PublicRoomContainer","match","params","showModal","setShowModal","validateRoom","setUserName","App","exact","path","component","newestOnTop","rtl","themesReducer","action","languageReducer","initState","roomReducer","socketId","_id","User","userReducer","executionReducer","codeReducer","rootReducer","combineReducers","middleware","thunk","enhancers","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","f","store","createStore","ReactDOM","render"],"mappings":"gSAAaA,EACH,CACNC,UAAW,aAFFD,EAIA,CACTE,aAAc,gBALLF,EAOL,CACJG,cAAe,gBACfC,eAAgB,iBAChBC,+BAAgC,iCAChCC,iBAAkB,mBAClBC,sBAAuB,yBAZdP,EAcL,CACJQ,SAAU,WACVC,YAAa,cACbC,mBAAoB,qBACpBC,cAAe,iBAlBNX,EAoBA,CACTY,mBAAoB,sBArBXZ,EAuBL,CACJa,SAAU,YCtBDC,EAAG,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,6DACXC,EAAaC,UAAUH,GADZ,SAGMI,MAAM,GAAD,OAAIF,GAAc,CAC5CG,OAAQ,QAJO,cAGXC,EAHW,yBAMVC,EAAgBD,IANN,2CAAH,sDASHE,EAAI,uCAAG,WAAOR,EAAKS,GAAZ,eAAAR,EAAA,sEACKG,MAAMJ,EAAK,CAChCK,OAAQ,OACRK,QAAS,CACPC,OAAQ,mBACR,eAAgB,mCAElBF,KAAMG,KAAKC,UAAUJ,KAPL,cACZH,EADY,yBASXC,EAAgBD,IATL,2CAAH,wDAYXC,EAAe,uCAAG,WAAMD,GAAN,eAAAL,EAAA,sEACHK,EAASQ,OADN,UAChBA,EADgB,OAEE,MAApBR,EAASS,OAFS,yCAGbC,QAAQC,QAAQH,IAHH,gCAKbE,QAAQE,OAAOJ,IALF,2CAAH,sD,QCrBNK,cAAqB,CAAEC,SAAU,MCcnCC,EAAkB,SAAAC,GAAI,OAAI,SAAAC,GACrCA,EAAS,CACPC,KAAMvC,EAAaU,mBACnB2B,KAAMA,M,QCjBJG,EAAe,CACnBC,SAAU,YACVC,UAAW,KACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,GAOCC,EAAc,SAAAC,GACzBC,IAAMC,MAAMF,EAASV,IAGVa,EAAa,SAAAH,GACxBC,IAAMG,KAAKJ,EAASV,ICfhBe,EAAOvD,EC0BEwD,MA7Bf,SAAoBC,GAAQ,IAAD,EACOC,mBAAS,IADhB,mBAClBC,EADkB,KACRC,EADQ,KAGjBtB,EAAamB,EAAbnB,SAOR,OACE,yBAAKuB,GAAG,uBACN,0BAAMA,GAAG,oBACP,2BACEC,UAAU,eACVD,GAAG,wBACHtB,KAAK,OACLwB,MAAOJ,EACPK,YAAY,aACZC,SAAU,SAAAC,GAAC,OAAIN,EAAYM,EAAEC,OAAOJ,UAEtC,4BAAQD,UAAU,WAAWM,QAhBnC,SAAsBF,GACpBA,EAAEG,iBACF/B,EDFsB,SAAAqB,GAAQ,8CAAI,WAAMrB,GAAN,iBAAAtB,EAAA,4DACxB,mBACNqB,EAAO,CAAEsB,SAAUA,GAFW,kBAKfpC,EAJT,mBAImBc,GALK,OAK5BR,EAL4B,OAMlCyC,EAAQC,KAAK,IAAM1C,EAAK2C,QANU,gDAQlCvB,EAAY,KAAIC,SARkB,yDAAJ,sDCErBuB,CAAWd,MAchB,kBCdOe,MARf,WACE,OACE,yBAAKb,GAAG,gBACN,yBAAKA,GAAG,WAAWc,IAAI,UAAUC,IAAI,uBCL9BC,EAAkB,SAAAC,GAC7B,GAAIA,EAAKC,OAAS,EAChB,OAAOD,EAET,IAAME,EAAWF,EAAKG,MAAM,KAE5B,OAAID,EAASD,OAAS,EACbC,EAAS,GAAG,GAEdA,EAAS,GAAG,GAAKA,EAAS,GAAG,ICUvBE,MAhBf,SAA4BzB,GAAQ,IAAD,EACTA,EAAM0B,KAAtBL,EADyB,EACzBA,KAEFM,EAAQ,CACZC,gBAJ+B,EACnBC,OAMd,OACE,wBAAIxB,UAAU,yBACZ,yBAAKsB,MAAOA,EAAOtB,UAAU,gCAC1Be,EAAgBC,MCIVS,MAdf,SAAwB9B,GAAQ,IACtB+B,EAAU/B,EAAV+B,MAER,OACE,yBAAK3B,GAAG,4BACN,wBAAIA,GAAG,oBACJ2B,EAAMC,KAAI,SAACN,EAAMO,GAAP,OACT,kBAAC,EAAD,CAAoBC,IAAKD,EAAOP,KAAMA,UCWjCS,MAff,WACE,IAAMtD,EAAWuD,cACXV,EAAOW,aAAY,SAAAC,GAAK,OAAIA,EAAMZ,QAClCK,EAAQM,aAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKR,SACtCS,EAAiBd,EAAjBc,aAER,OACE,yBAAKpC,GAAG,UACN,kBAAC,EAAD,OACEoC,EAAaC,WAAa,kBAAC,EAAD,CAAY5D,SAAUA,IACjD2D,EAAaC,WAAa,kBAAC,EAAD,CAAgBV,MAAOA,M,iBC4EzCW,MAxFf,SAAsB1C,GAAQ,IACpB2C,EAA4B3C,EAA5B2C,WAAYC,EAAgB5C,EAAhB4C,KAAMb,EAAU/B,EAAV+B,MADC,EAGiB9B,mBAAS,MAH1B,mBAGpB4C,EAHoB,KAGJC,EAHI,OAIW7C,mBAAS,IAJpB,mBAIpB8C,EAJoB,KAIPC,EAJO,KAMrBC,EAAQZ,aAAY,SAAAC,GAAK,OAAIA,EAAMW,SACnCC,EAAWb,aAAY,SAAAC,GAAK,OAAIA,EAAMY,YAE5CC,qBA8BA,WACE,GAAMN,GAAoBO,GAAarB,EAAO,CAC5C,IACMsB,EADgBtB,EAAMuB,QAAO,SAAA5B,GAAI,OAAIA,EAAK6B,qBACnBvB,KAAI,SAAAN,GAC/B,IAAM8B,EAAQ9B,EAAK6B,kBACnB,MAAO,CACLE,MAAO,IAAIZ,EAAea,MACxBF,EAAMG,WACNH,EAAMI,OACNJ,EAAMG,WACNH,EAAMI,QAERC,QAAS,CACPxD,UAAU,0BAAD,OAA4BqB,EAAKG,OAC1CiC,gBAAiB,qBAInBC,EAAUX,EAAUY,QAAQC,iBAAiBlB,EAAaM,GAC9DL,EAAee,MAjDW,CAAChC,IAE/BoB,qBAAU,WACRe,SACGC,OACAC,MAAK,SAAAF,GACJpB,EAAkBoB,MAEnBG,OAAM,SAAA1E,GAAK,OACV2E,QAAQ3E,MACN,sDACAA,QAGL,IAEH,IAAM4E,EAAcC,iBAAO,MACrBpB,EAAYoB,iBAAO,MA6CzB,OACE,yBAAKpE,GAAG,kBACN,yBAAKA,GAAG,SAASqE,QAxCrB,WACE,IAAIlB,EAAoBH,EAAUY,QAAQU,cACpC9B,EAAO2B,EAAYP,UACzBrB,EAAWC,EAAMW,KAsCb,kBAAC,mBAAD,CACEoB,OAAO,OACPC,MAAM,OACN1B,SAAUA,EACVD,MAAOA,EACP3C,MAAOsC,EACPiC,eApDR,SAA8BC,EAAcC,GAC1CR,EAAYP,QAAUc,EACtB1B,EAAUY,QAAUe,GAmDdlB,QAnBQ,CACdmB,QAAS,CAAEC,SAAS,GACpBC,iBAAiB,EACjBC,UAAW,CACTC,sBAAuB,EACvBC,wBAAyB,SCxDhBC,MAZf,SAAqBtF,GAAQ,IACnB2C,EAAqB3C,EAArB2C,WAAYC,EAAS5C,EAAT4C,KAEpB,OACE,yBAAKxC,GAAG,mBACN,yBAAKA,GAAG,WACN,kBAAC,EAAD,CAAcmF,SAAS,EAAM3C,KAAMA,EAAMD,WAAYA,OCY9C6C,MAlBf,SAAsBxF,GAAQ,IACpB0B,EAAS1B,EAAT0B,KACAL,EAAgBK,EAAhBL,KAEFM,EAAQ,CACZC,gBAHsBF,EAAVG,OAMd,OACE,yBAAKxB,UAAU,gBACb,wBAAIA,UAAU,qBAAd,IAAoCgB,GACpC,yBAAKM,MAAOA,EAAOtB,UAAU,iCAC1Be,EAAgBC,MCJVoE,MATf,SAAsBzF,GACpB,OACE,yBAAKK,UAAU,yBACb,uBAAGA,UAAS,uBAAkBL,EAAM0F,QACpC,0BAAMrF,UAAU,iBAAiBL,EAAM2F,SCa9BC,MAff,SAAkB5F,GAAQ,IAChB6F,EAAkB7F,EAAlB6F,OAAQ9D,EAAU/B,EAAV+B,MAEhB,OACE,oCACE,kBAAC,EAAD,CAAc2D,KAAK,sBAAsBC,MAAM,WAC/C,yBAAKvF,GAAG,aACL2B,EAAMC,KAAI,SAACN,EAAMO,GAAP,OACT,kBAAC,EAAD,CAAcC,IAAKD,EAAOP,KAAMA,EAAMmE,OAAQA,U,iBCgBzCC,MAvBf,WACE,IAAMjH,EAAWuD,cACXa,EAAQZ,aAAY,SAAAC,GAAK,OAAIA,EAAMW,SAMnC8C,EAAqB,SAAV9C,EAEjB,OACE,yBAAK5C,UAAU,yBACb,kBAAC,IAAD,CACEC,MAAOyF,EACPC,SAVN,WACEnH,ECRuB,SAAAoE,GAAK,OAAI,SAAApE,GAClCA,EAAS,CACPC,KAAMvC,EAAeC,UACrBoC,KAAgB,SAAVqE,EAAmB,QAAU,UDK1BgD,CAAYhD,KAUjBiD,cAAe,QACfC,YAAa,SAEf,wBAAI9F,UAAU,eAAd,aEFS+F,MAhBf,SAA6BpG,GAAQ,IAC3BnB,EAAamB,EAAbnB,SACFwH,EAAgBhE,aAAY,SAAAC,GAAK,OAAIA,EAAM+D,iBAMjD,OACE,yBAAKhG,UAAU,yBACb,kBAAC,IAAD,CAAcC,MAAO+F,EAAeL,SANxC,WCPiC,IAAA1F,EDQ/BzB,GCR+ByB,GDQD+F,ECRU,SAAAxH,GAC1CA,EAAS,CACPC,KAAMvC,EAAkBY,mBACxByB,KAAM0B,UDWJ,wBAAID,UAAU,eAAd,YEhBOiG,EAAc,SAAA1D,GACZ2D,SAASC,eAAe,WAC9BC,UAAY,GACnB,IACW,IAAIC,SAAS9D,EACtB+D,GACA,MAAOC,GACPtC,QAAQuC,IAAID,EAAIvF,KAAO,KAAOuF,EAAInH,WCavBqH,MAhBf,WACE,IAAMlE,EAAOP,aAAY,SAAAC,GAAK,OAAIA,EAAMM,QAMxC,OACE,yBAAKvC,UAAU,yBACb,4BAAQA,UAAU,2BAA2BM,QANjD,WACE2F,EAAY1D,KAMR,uBAAGvC,UAAU,eADf,UCQS0G,MAff,SAAsB/G,GAAQ,IACpBnB,EAAamB,EAAbnB,SAER,OACE,oCACE,kBAAC,EAAD,CAAc6G,KAAK,YAAYC,MAAM,aACrC,yBAAKvF,GAAG,YACN,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAqBvB,SAAUA,IAC/B,kBAAC,EAAD,SCMOmI,MAhBf,WACE,IAAMC,EAAW5E,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QACtCb,EAAOW,aAAY,SAAAC,GAAK,OAAIA,EAAMZ,QAClC7C,EAAWuD,cAETL,EAAUkF,EAAVlF,MACA3B,EAAqBsB,EAArBtB,GAAIoC,EAAiBd,EAAjBc,aAEZ,OACE,yBAAKpC,GAAG,WACN,kBAAC,EAAD,CAAcvB,SAAUA,IACvB2D,EAAaC,WAAa,kBAAC,EAAD,CAAUoD,OAAQzF,EAAI2B,MAAOA,MCdjDmF,EAAoB,SAAA5G,GAAK,OAAI,SAAAzB,GACxCA,EAAS,CACPC,KAAMvC,EAAaa,SACnBwB,KAAM0B,MCLG6G,EAAkB,WAK7B7C,QAAQuC,IAAM,WACZ,IAAK,IAAIO,EAAI,EAAGA,EAAIC,UAAU/F,OAAQ8F,IAAK,CACzC,IAAIE,EAAcC,EAAeF,UAAUD,IAC3CI,EAAgBF,MAKtB,SAASE,EAAgBF,GACVf,SAASC,eAAe,WAC9BiB,YAAYH,GAGrB,SAASC,EAAejH,GACtB,IAAIgH,EAAcf,SAASmB,cAAc,MAGzC,OAFAJ,EAAYjH,UAAY,SAEH,kBAAVC,EACLqH,MAAMC,QAAQtH,GAmCtB,SAA6BuH,GAC3B,IAAIC,EAAWvB,SAASmB,cAAc,MACtCI,EAASzH,UAAY,SACrByH,EAASrB,WAAa,IAatB,OATAoB,EAAIE,SAAQ,SAACzH,EAAO2B,GAElB6F,EAASrB,WAAauB,GAAiB1H,EAJ9B,GAMLuH,EAAIvG,OAAS,IAAMW,IACrB6F,EAASrB,WAAa,SAG1BqB,EAASrB,WAAa,IACfqB,EAlDIG,CAAoB3H,GAWjC,SAA8B4H,GAC5B,IAAIJ,EAAWvB,SAASmB,cAAc,MACtCI,EAASzH,UAAY,SACrByH,EAASrB,WAAa,OAEtB,IAAI0B,EAAOC,OAAOD,KAAKD,GAevB,OAZAC,EAAKJ,SAAQ,SAAC7F,EAAKD,GACjB,IAAI3B,EAAQ4H,EAAIhG,GAEhB4F,EAASrB,WACP4B,GAAyBnG,GAAO,KAAO8F,GAAiB1H,EANjD,GAOL6H,EAAK7G,OAAS,IAAMW,IACtB6F,EAASrB,WAAa,MAExBqB,EAASrB,WAAa,QAExBqB,EAASrB,WAAa,IAEfqB,EA7BIQ,CAAqBhI,IAG9BgH,EAAYG,YAuGhB,SAAqBc,GACnB,IAAIC,EAAWjC,SAASmB,cAAc,QAGtC,OAFAc,EAASnI,UAAT,qBAAmCkI,GACnCC,EAAS/B,UAA4B,kBAAT8B,EAAoB,IAAMA,EAAO,IAAMA,EAC5DC,EA3GmBC,CAAYnI,IAG/BgH,GA6CT,SAASU,GAAiB1H,EAAOoI,GAY/B,MAVqB,kBAAVpI,EACLqH,MAAMC,QAAQtH,GAYtB,SAAsCuH,EAAKa,GACzC,IAAIjC,EAAY,IAShB,OARAiC,IACAb,EAAIE,SAAQ,SAACzH,EAAO2B,GAClBwE,GAAauB,GAAiB1H,EAAOoI,GACjCb,EAAIvG,OAAS,IAAMW,IACrBwE,GAAa,SAGjBA,GAAa,IApBIkC,CAA6BrI,GAwBhD,SAAuC4H,EAAKQ,GAC1C,IAAIjC,EAAY,OAEZ0B,EAAOC,OAAOD,KAAKD,GAiBvB,OAhBAQ,IAEAP,EAAKJ,SAAQ,SAAC7F,EAAKD,GACjB,IAAI3B,EAAQ4H,EAAIhG,GAEhBuE,GACE,KAAKmC,OAAOF,EAAO,GACnBL,GAAyBnG,GACzB,KACA8F,GAAiB1H,EAAOoI,GACtBP,EAAK7G,OAAS,IAAMW,IACtBwE,GAAa,MAEfA,GAAa,QAEfA,GAAa,KAAKmC,OAAOF,GAAQ,IAzChBG,CAA8BvI,EAAOoI,GAwDxD,SAA8BH,GAC5B,IAAIlI,EAAS,qBAAiBkI,GAC1BjI,EAAwB,kBAATiI,EAAoB,IAAMA,EAAO,IAAMA,EAE1D,MADQ,uBAAmBlI,EAAnB,aAAiCC,EAAjC,WAxDOwI,CAAqBxI,GA0CtC,SAAS+H,GAAyB/H,GAChC,MAAM,gCAAN,OAAuCA,EAAvC,WCxGayI,OArBf,SAAiB/I,GACf,IAAMqG,EAAgBhE,aAAY,SAAAC,GAAK,OAAIA,EAAM+D,iBAQjD,OANAlD,qBAAU,WACJkD,GACFC,EAAYtG,EAAM4C,QAEnB,CAAC5C,EAAM4C,KAAMyD,IAGd,yBAAKjG,GAAG,mBACN,yBAAKA,GAAG,iBACN,0BAAMA,GAAG,gBAAT,cAEF,yBAAKA,GAAG,kBACN,wBAAIA,GAAG,eCQA4I,OAnBf,WACE,IAAMpG,EAAOP,aAAY,SAAAC,GAAK,OAAIA,EAAMM,QAClC/D,EAAWuD,cAQjB,OANAe,oBAAUgE,EAAiB,IAOzB,yBAAK/G,GAAG,eACN,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAauC,WAPjB,SAAoBC,GAClB/D,EAASqI,EAAkBtE,KAMYA,KAAMA,IAC3C,kBAAC,GAAD,CAASA,KAAMA,M,oBCrBfqG,GACyB,cAA7BC,OAAOC,SAASC,SACZ,wBACA,qCACAC,GAASC,KAAWL,ICuFXM,OAvEf,SAAoBvJ,GAAQ,IAClBnB,EAAmDmB,EAAnDnB,SAAU+D,EAAyC5C,EAAzC4C,KAAMD,EAAmC3C,EAAnC2C,WAAYjB,EAAuB1B,EAAvB0B,KAAMX,EAAiBf,EAAjBe,OAAQwB,EAASvC,EAATuC,KAyDlD,OAvDAY,qBAkBA,WACMzB,EAAKL,MAAQN,KDpCrB,SAAsBM,EAAMN,GAC1BsI,GAAOG,KAAK,YAAa,CAAEzI,OAAQA,EAAQM,KAAMA,ICoC7CoI,CAAa/H,EAAKL,KAAMN,GACxBnB,EAAW,wBAA0B8B,EAAKc,aAAatC,WD5BtCwJ,EC+BL,SAAAhI,IAlBhB,SAAiBA,GACf7C,EzBcyB,SAAA6C,GAAI,OAAI,SAAA7C,GACnCA,EAAS,CACPC,KAAMgB,EAAKjD,iBACX+B,KAAM8C,KyBjBGiI,CAAcjI,IAkBrBkI,CAAQlI,GACR9B,EAAW8B,EAAKL,KAAO,YDhC3BgI,GAAOQ,GAAG,kBAAkB,SAAAhK,GAC1B6J,EAAS7J,MARb,SAAoB6J,GAClBL,GAAOQ,GAAG,aAAa,SAAAjL,GACrB8K,EAAS9K,MCwCTkL,EAAW,SAAAlL,GAfb,IAA0BiH,EAgBtBU,SAASM,IAAIjI,GA5BjB,SAAiB2D,GACf1D,EzBIuB,SAAA0D,GAAI,OAAI,SAAA1D,GACjCA,EAAS,CACPC,KAAMgB,EAAKpD,cACXkC,KAAM2D,KyBPGwH,CAAYxH,IA4BnByH,CAAQpL,EAAKqL,UAjBSpE,EAkBLjH,EAAKiH,OAjBxBhH,E3B9BqB,SAAAgH,GAAM,OAAI,SAAAhH,GACjCA,EAAS,CACPC,KAAMvC,EAAaS,YACnB4B,KAAMiH,K2B2BGqE,CAAUrE,ODGvB,SAAuB6D,GACrBL,GAAOQ,GAAG,gBAAgB,SAAAjL,GACxB8K,EAAS9K,MCeTuL,EAAc,SAAAtK,GAWhB,IAAwBgG,EAAQtC,EAV5BZ,EAAW9C,EAAK+C,MAUIiD,EATLhG,EAAKgG,OASQtC,EATA1D,EAAK0D,kBAUnC1E,EzBZsC,SACxCgH,EACAtC,GAFwC,OAGrC,SAAA1E,GACHA,EAAS,CACPC,KAAMgB,EAAKlD,+BACXgC,KAAM,CACJiH,OAAQA,EACRtC,kBAAmBA,MyBIZ6G,CAA2BvE,EAAQtC,ODhDhD,SAA0BmG,GACxBL,GAAOQ,GAAG,qBAAqB,SAAAjL,GAC7B8K,EAAS9K,MCuCTyL,EAAiB,SAAA3I,G1BxCQ,IAAAjC,G0BU3B,SAAoBiC,GAClB7C,EzBiB8B,SAAA6C,GAAI,OAAI,SAAA7C,GACxCA,EAAS,CACPC,KAAMgB,EAAKhD,sBACX8B,KAAM8C,KyBpBG4I,CAAmB5I,IA8B1B6I,CAAW7I,G1BzCYjC,E0B0CTiC,EAAKL,KAAO,gB1BzC9B3B,IAAM8K,QAAQ/K,EAASV,MyBRzB,IAAuB2K,ICOQ,CAAChI,EAAKL,KAAMN,IAwDvC,yBAAKX,GAAG,mBACN,yBAAKA,GAAG,WACN,kBAAC,EAAD,CACEwC,KAAMA,EACND,WAVR,SAA4B8H,EAASlH,ID7CvC,SAAoBX,EAAM7B,EAAQ8E,EAAQtC,GACxC,IAAM3E,EAAO,CACXmC,OAAQA,EACRlB,KAAM,CACJ+C,KAAMA,EACNW,kBAAmBA,EACnBsC,OAAQA,IAIZwD,GAAOG,KAAK,SAAU5K,GCoCpB8L,CAAWD,EAASlI,EAAKxB,OAAQW,EAAKtB,GAAImD,GAC1CZ,EAAW8H,IASL1I,MAAOQ,EAAKR,WCrCP4I,OA7Cf,SAAe3K,GAAQ,IAAD,EACIC,mBAAS,IADb,mBACboB,EADa,KACPuJ,EADO,KAGZC,EAAmB7K,EAAnB6K,SAEFC,EAFqB9K,EAAT+K,KAEe,sBAAwB,qBAazD,OACE,yBAAK1K,UAAWyK,GACd,6BAASzK,UAAU,cACjB,yBAAKD,GAAG,iBACN,yBAAKC,UAAU,gBAAgBD,GAAG,eAChC,wBAAIA,GAAG,kBAAP,sBAEF,yBAAKC,UAAU,gBAAgBD,GAAG,eAChC,2BACEC,UAAU,2BACVvB,KAAK,OACLwB,MAAOe,EACPd,YAAY,cACZC,SAAU,SAAAC,GAAC,OAAImK,EAAQnK,EAAEC,OAAOJ,WAGpC,yBAAKD,UAAU,gBAAgBD,GAAG,qBAChC,4BAAQC,UAAU,WAAWD,GAAG,YAAYO,QA7BtD,WACMU,EAAKC,OAAS,GAChB9B,EAAY,mCAEa,IAAhB6B,EAAKC,OAIduJ,EAASxJ,GAHT7B,EAAY,kCAwBN,kBCgBGwL,OA3Cf,SAA6BhL,GAC3B,IAAMe,EAASf,EAAMiL,MAAMC,OAAO3I,KAC5B1D,EAAWuD,cACXV,EAAOW,aAAY,SAAAC,GAAK,OAAIA,EAAMZ,QAClCkB,EAAOP,aAAY,SAAAC,GAAK,OAAIA,EAAMM,QAClCL,EAAOF,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QALN,EAOAtC,oBAAS,GAPT,mBAO3BkL,EAP2B,KAOhBC,EAPgB,KAwBlC,OAfAjI,oBAAUgE,EAAiB,IAE3BhE,qBAAU,WACRtE,E3BHwB,SAAAkC,GAAM,8CAAI,WAAMlC,GAAN,iBAAAtB,EAAA,6DAC9BD,EAD8B,4BACHyD,GADG,kBAGf1D,EAAIC,GAHW,OAG5Bc,EAH4B,OAIlCS,EAASF,EAAgB,CAAE8D,WAAW,EAAMvC,SAAU9B,EAAK8B,YAJzB,gDAMlCW,EAAQC,KAAK,KACbtB,EAAY,KAAIC,SAPkB,yDAAJ,sD2BGrB4L,CAAatK,MACrB,CAAClC,EAAUkC,IAYZ,yBAAKX,GAAG,eACN,kBAAC,EAAD,MACCsB,EAAKc,aAAaC,WAAaf,EAAKL,KAAKC,OAAS,GACjD,kBAAC,GAAD,CACEsB,KAAMA,EACND,WAfR,SAAoBC,GAClB/D,EAASqI,EAAkBtE,KAerB/D,SAAUA,EACVkC,OAAQA,EACRW,KAAMA,EACNa,KAAMA,IAGV,kBAAC,GAAD,CAASK,KAAMA,IACf,kBAAC,GAAD,CAAOmI,KAAMI,EAAWN,SAnB5B,SAAmBxJ,GACjBxC,E7BRuB,SAAAwC,GAAI,OAAI,SAAAxC,GACjCA,EAAS,CACPC,KAAMvC,EAAaW,cACnB0B,KAAMyC,K6BKGiK,CAAYjK,IACrB+J,GAAa,QCxBjB7E,SAASM,IAAMvC,QAAQuC,IAwBR0E,OAtBf,WACE,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAQ1K,QAASA,GACf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO2K,OAAK,EAACC,KAAK,IAAIC,UAAW1C,KACjC,kBAAC,IAAD,CAAOyC,KAAK,SAASC,UAAWV,OAGpC,kBAAC,IAAD,CACEhM,SAAS,YACTC,UAAW,KACXC,iBAAiB,EACjByM,aAAa,EACbxM,cAAY,EACZyM,KAAK,M,uDCfEC,GATO,WAA6B,IAA5BvJ,EAA2B,uDAAnB,OAAQwJ,EAAW,uCAChD,OAAQA,EAAOhN,MACb,KAAKvC,EAAeC,UAClB,OAAOsP,EAAOlN,KAChB,QACE,OAAO0D,ICIEyJ,GATS,WAAmC,IAAlCzJ,EAAiC,uDAAzB,aAAcwJ,EAAW,uCACxD,OAAQA,EAAOhN,MACb,KAAKvC,EACH,OAAOuP,EAAOlN,KAChB,QACE,OAAO0D,I,iBCLP0J,GAAY,CAAEjK,MAAO,GAAI7B,SAAU,IA8C1B+L,GA5CK,WAAgC,IAA/B3J,EAA8B,uDAAtB0J,GAAWF,EAAW,uCACjD,OAAQA,EAAOhN,MACb,KAAKvC,EAAaG,cAChB,OAAO,6BACF4F,GACAwJ,EAAOlN,MAEd,KAAKrC,EAAaI,eAChB,OAAO,6BACF2F,GADL,IAEEP,MAAO+J,EAAOlN,OAElB,KAAKrC,EAAaM,iBAChB,OAAO,6BACFyF,GADL,IAEEP,MAAM,GAAD,oBAAMO,EAAMP,OAAZ,CAAmB+J,EAAOlN,SAGnC,KAAKrC,EAAaO,sBAChB,OAAO,6BACFwF,GADL,IAEEP,MAAOO,EAAMP,MAAMuB,QACjB,SAAA5B,GAAI,OAAIA,EAAKwK,WAAaJ,EAAOlN,KAAKsN,cAI5C,KAAK3P,EAAaK,+BAChB,OAAO,6BACF0F,GADL,IAEEP,MAAOO,EAAMP,MAAMC,KAAI,SAAAN,GACrB,OAAIA,EAAKyK,MAAQL,EAAOlN,KAAKiH,OACpB,6BACFnE,GADL,IAEE6B,kBAAmBuI,EAAOlN,KAAK2E,oBAG5B7B,OAGb,QACE,OAAOY,IC1CP8J,GAAO7P,EAoCE8P,GAlCK,WAOd,IANJ/J,EAMG,uDANK,CACNlC,GAAI,GACJiB,KAAM,GACNmB,aAAc,CAAEC,WAAW,EAAOvC,SAAU,KAE9C4L,EACG,uCACH,OAAQA,EAAOhN,MACb,KAAKsN,GAAKrP,SACR,OAAO+O,EAAOlN,KAChB,KAAKwN,GAAKpP,YACR,OAAO,6BACFsF,GADL,IAEElC,GAAI0L,EAAOlN,OAGf,KAAKwN,GAAKnP,mBACR,OAAO,6BACFqF,GADL,IAEEE,aAAcsJ,EAAOlN,OAGzB,KAAKwN,GAAKlP,cACR,OAAO,6BACFoF,GADL,IAEEjB,KAAMyK,EAAOlN,OAGjB,QACE,OAAO0D,ICvBEgK,GATU,WAA4B,IAA3BhK,EAA0B,wDAAXwJ,EAAW,uCAClD,OAAQA,EAAOhN,MACb,KAAKvC,EAAkBY,mBACrB,OAAO2O,EAAOlN,KAChB,QACE,OAAO0D,ICIEiK,GATK,WAA8C,IAA7CjK,EAA4C,uDAApC,wBAAyBwJ,EAAW,uCAC/D,OAAQA,EAAOhN,MACb,KAAKvC,EAAaa,SAChB,OAAO0O,EAAOlN,KAChB,QACE,OAAO0D,ICUEkK,GATKC,aAAgB,CAClCxJ,MAAO4I,GACP3I,SAAU6I,GACVxJ,KAAM0J,GACNvK,KAAM2K,GACNhG,cAAeiG,GACf1J,KAAM2J,KCDFG,GAAa,CAACC,MAEdC,GAAYC,aAChBC,KAAe,WAAf,EAAmBJ,IACnBxD,OAAO6D,6BACH7D,OAAO6D,+BACP,SAAAC,GAAC,OAAIA,IAGLC,GAAQC,aAAYV,GAAaI,IAEvCO,IAASC,OACP,kBAAC,IAAD,CAAUH,MAAOA,IACf,kBAAC,GAAD,OAEF1G,SAASC,eAAe,U","file":"static/js/main.8ad034d1.chunk.js","sourcesContent":["export const Actions = {\n  Themes: {\n    SET_THEME: \"SET_THEME\"\n  },\n  Languages: {\n    SET_LANGUAGE: \"SET_LANGUAGE\"\n  },\n  Room: {\n    SET_ROOM_DATA: \"SET_ROOM_DATA\",\n    SET_ROOM_USERS: \"SET_ROOM_USERS\",\n    UPDATE_USER_CURSOR_COORDINATES: \"UPDATE_USER_CURSOR_COORDINATES\",\n    ADD_USER_TO_ROOM: \"ADD_USER_TO_ROOM\",\n    REMOVE_USER_FROM_ROOM: \"REMOVE_USER_FROM_ROOM\"\n  },\n  User: {\n    SET_USER: \"SET_USER\",\n    SET_USER_ID: \"SET_USER_ID\",\n    SET_USER_ROOM_INFO: \"SET_USER_ROOM_INFO\",\n    SET_USER_NAME: \"SET_USER_NAME\"\n  },\n  Execution: {\n    SET_LIVE_EXECUTION: \"SET_LIVE_EXECUTION\"\n  },\n  Code: {\n    SET_CODE: \"SET_CODE\"\n  }\n};\n","//const publicIp = require(\"public-ip\");\n\nexport const get = async url => {\n  const encodedUrl = encodeURI(url);\n\n  const response = await fetch(`${encodedUrl}`, {\n    method: \"get\"\n  });\n  return resolveResponse(response);\n};\n\nexport const post = async (url, body) => {\n  const response = await fetch(url, {\n    method: \"post\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json; charset=utf-8\"\n    },\n    body: JSON.stringify(body)\n  });\n  return resolveResponse(response);\n};\n\nconst resolveResponse = async response => {\n  const json = await response.json();\n  if (response.status === 200) {\n    return Promise.resolve(json);\n  } else {\n    return Promise.reject(json);\n  }\n};\n","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory({ basename: \"/\" });\n","import { Actions } from \"../constants/actions\";\n\nexport const setUser = user => dispatch => {\n  dispatch({\n    type: Actions.User.SET_USER,\n    data: user\n  });\n};\n\nexport const setUserId = userId => dispatch => {\n  dispatch({\n    type: Actions.User.SET_USER_ID,\n    data: userId\n  });\n};\n\nexport const setUserRoomInfo = data => dispatch => {\n  dispatch({\n    type: Actions.User.SET_USER_ROOM_INFO,\n    data: data\n  });\n};\n\nexport const setUserName = name => dispatch => {\n  dispatch({\n    type: Actions.User.SET_USER_NAME,\n    data: name\n  });\n};\n","import { toast } from \"react-toastify\";\n\nconst nofifyConfig = {\n  position: \"top-right\",\n  autoClose: 2500,\n  hideProgressBar: false,\n  closeOnClick: false,\n  pauseOnHover: false,\n  draggable: true,\n  progress: undefined\n};\n\nexport const notifySuccess = message => {\n  toast.success(message, nofifyConfig);\n};\n\nexport const notifyError = message => {\n  toast.error(message, nofifyConfig);\n};\n\nexport const notifyInfo = message => {\n  toast.info(message, nofifyConfig);\n};\n\nexport const notifyWarning = message => {\n  toast.warning(message, nofifyConfig);\n};\n","import { Actions } from \"../constants/actions\";\nimport { post, get } from \"./restClient\";\nimport history from \"../history\";\nimport { setUserRoomInfo } from \"./userActions\";\nimport { notifyError } from \"../utils/toaster\";\n\nconst Room = Actions.Room;\n\nexport const createRoom = roomName => async dispatch => {\n  const url = \"/api/room/create\";\n  const data = { roomName: roomName };\n\n  try {\n    const json = await post(url, data);\n    history.push(\"/\" + json.roomId);\n  } catch (err) {\n    notifyError(err.message);\n  }\n};\n\nexport const validateRoom = roomId => async dispatch => {\n  const url = `api/room/validate/${roomId}`;\n  try {\n    const json = await get(url);\n    dispatch(setUserRoomInfo({ validated: true, roomName: json.roomName }));\n  } catch (err) {\n    history.push(\"/\");\n    notifyError(err.message);\n  }\n};\n\nexport const setRoomData = room => dispatch => {\n  dispatch({\n    type: Room.SET_ROOM_DATA,\n    data: room\n  });\n};\n\nexport const setRoomUsers = users => dispatch => {\n  dispatch({\n    type: Room.SET_ROOM_USERS,\n    data: users\n  });\n};\n\nexport const addUserToRoom = user => dispatch => {\n  dispatch({\n    type: Room.ADD_USER_TO_ROOM,\n    data: user\n  });\n};\n\nexport const removeUserFromRoom = user => dispatch => {\n  dispatch({\n    type: Room.REMOVE_USER_FROM_ROOM,\n    data: user\n  });\n};\n\nexport const updateUserCursorCordinates = (\n  userId,\n  cursorCoordinates\n) => dispatch => {\n  dispatch({\n    type: Room.UPDATE_USER_CURSOR_COORDINATES,\n    data: {\n      userId: userId,\n      cursorCoordinates: cursorCoordinates\n    }\n  });\n};\n","import React, { useState } from \"react\";\nimport { createRoom } from \"../../actions/roomActions\";\n\nfunction CreateRoom(props) {\n  const [roomName, setRoomName] = useState(\"\");\n\n  const { dispatch } = props;\n\n  function onCreateRoom(e) {\n    e.preventDefault();\n    dispatch(createRoom(roomName));\n  }\n\n  return (\n    <div id=\"create-room-wrapper\">\n      <form id=\"create-room-form\">\n        <input\n          className=\"input-style \"\n          id=\"create-room-textfield\"\n          type=\"text\"\n          value={roomName}\n          placeholder=\"Enter name\"\n          onChange={e => setRoomName(e.target.value)}\n        />\n        <button className=\"blue-btn\" onClick={onCreateRoom}>\n          Create room\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateRoom;\n","import React from \"react\";\n\nfunction Logo() {\n  return (\n    <div id=\"logo-wrapper\">\n      <img id=\"logo-img\" alt=\"unknown\" src=\"./CODECOLLAB.png\" />\n    </div>\n  );\n}\n\nexport default Logo;\n","export const getUserNickname = name => {\n  if (name.length < 3) {\n    return name;\n  }\n  const splitted = name.split(\" \");\n\n  if (splitted.length < 2) {\n    return splitted[0][0];\n  }\n  return splitted[0][0] + splitted[1][0];\n};\n","import React from \"react\";\nimport { getUserNickname } from \"../../utils/userNickname\";\n\nfunction TopbarUserListItem(props) {\n  const { name, color } = props.user;\n\n  const style = {\n    backgroundColor: color\n  };\n\n  return (\n    <li className=\"topbar-user-list-item\">\n      <div style={style} className=\"topbar-user-list-item-avatar\">\n        {getUserNickname(name)}\n      </div>\n    </li>\n  );\n}\n\nexport default TopbarUserListItem;\n","import React from \"react\";\nimport TopbarUserListItem from \"./TopbarUserListItem\";\n\nfunction TopbarUserList(props) {\n  const { users } = props;\n\n  return (\n    <div id=\"topbar-user-list-wrapper\">\n      <ul id=\"topbar-user-list\">\n        {users.map((user, index) => (\n          <TopbarUserListItem key={index} user={user} />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default TopbarUserList;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport CreateRoom from \"./CreateRoom\";\nimport Logo from \"./Logo\";\nimport TopbarUserList from \"./TopbarUserList\";\n\nfunction Topbar() {\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user);\n  const users = useSelector(state => state.room.users);\n  const { userRoomInfo } = user;\n\n  return (\n    <div id=\"topbar\">\n      <Logo />\n      {!userRoomInfo.validated && <CreateRoom dispatch={dispatch} />}\n      {userRoomInfo.validated && <TopbarUserList users={users} />}\n    </div>\n  );\n}\n\nexport default Topbar;\n","import React, { useRef, useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { ControlledEditor, monaco } from \"@monaco-editor/react\";\n\nfunction MonacoEditor(props) {\n  const { updateCode, code, users } = props;\n\n  const [monacoInstance, setMonacoInstance] = useState(null);\n  const [decorations, setDecorations] = useState([]);\n\n  const theme = useSelector(state => state.theme);\n  const language = useSelector(state => state.language);\n\n  useEffect(applyCursorEffects, [users]);\n\n  useEffect(() => {\n    monaco\n      .init()\n      .then(monaco => {\n        setMonacoInstance(monaco);\n      })\n      .catch(error =>\n        console.error(\n          \"An error occurred during initialization of Monaco: \",\n          error\n        )\n      );\n  }, []);\n\n  const editorValue = useRef(null);\n  const editorRef = useRef(null);\n\n  function handleEditorDidMount(_editorValue, _editorRef) {\n    editorValue.current = _editorValue;\n    editorRef.current = _editorRef;\n  }\n\n  function onChange() {\n    let cursorCoordinates = editorRef.current.getPosition();\n    const code = editorValue.current();\n    updateCode(code, cursorCoordinates);\n  }\n\n  function applyCursorEffects() {\n    if (!!monacoInstance && !!editorRef && users) {\n      const filteredUsers = users.filter(user => user.cursorCoordinates);\n      const ranges = filteredUsers.map(user => {\n        const coord = user.cursorCoordinates;\n        return {\n          range: new monacoInstance.Range(\n            coord.lineNumber,\n            coord.column,\n            coord.lineNumber,\n            coord.column\n          ),\n          options: {\n            className: `user-cursor user-color-${user.color}`,\n            inlineClassName: \"selectedRange\"\n          }\n        };\n      });\n      var newDeco = editorRef.current.deltaDecorations(decorations, ranges);\n      setDecorations(newDeco);\n    }\n  }\n\n  const options = {\n    minimap: { enabled: false },\n    smoothScrolling: true,\n    scrollbar: {\n      verticalScrollbarSize: 5,\n      horizontalScrollbarSize: 5\n    }\n  };\n\n  return (\n    <div id=\"editor-wrapper\">\n      <div id=\"editor\" onKeyUp={onChange}>\n        <ControlledEditor\n          height=\"100%\"\n          width=\"100%\"\n          language={language}\n          theme={theme}\n          value={code}\n          editorDidMount={handleEditorDidMount}\n          options={options}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default MonacoEditor;\n","import React from \"react\";\nimport MonacoEditor from \"../content/MonacoEditor\";\n\nfunction PrivateRoom(props) {\n  const { updateCode, code } = props;\n\n  return (\n    <div id=\"content-wrapper\">\n      <div id=\"content\">\n        <MonacoEditor canEdit={true} code={code} updateCode={updateCode} />\n      </div>\n    </div>\n  );\n}\n\nexport default PrivateRoom;\n","import React from \"react\";\nimport { getUserNickname } from \"../../utils/userNickname\";\n\nfunction UserListItem(props) {\n  const { user } = props;\n  const { name, color } = user;\n\n  const style = {\n    backgroundColor: color\n  };\n\n  return (\n    <div className=\"sidebar-item\">\n      <h3 className=\"sidebar-item-text\"> {name}</h3>\n      <div style={style} className=\"sidebar-user-list-item-avatar\">\n        {getUserNickname(name)}\n      </div>\n    </div>\n  );\n}\n\nexport default UserListItem;\n","import React from \"react\";\n\nfunction SidebarTitle(props) {\n  return (\n    <div className=\"sidebar-title-wrapper\">\n      <i className={`sidebar-icon ${props.icon}`}></i>\n      <span className=\"sidebar-title\">{props.title}</span>\n    </div>\n  );\n}\n\nexport default SidebarTitle;\n","import React from \"react\";\nimport UserListItem from \"./UserListItem\";\nimport SidebarTitle from \"./item/SidebarTitle\";\n\nfunction UserList(props) {\n  const { userId, users } = props;\n\n  return (\n    <>\n      <SidebarTitle icon=\"fas fa-user-friends\" title=\"Coders\" />\n      <div id=\"user-list\">\n        {users.map((user, index) => (\n          <UserListItem key={index} user={user} userId={userId} />\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default UserList;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toggleTheme } from \"../../../actions/themeActions\";\nimport ToggleButton from \"react-toggle-button\";\n\nfunction ThemeToggler() {\n  const dispatch = useDispatch();\n  const theme = useSelector(state => state.theme);\n\n  function toggle() {\n    dispatch(toggleTheme(theme));\n  }\n\n  const isActive = theme === \"dark\";\n\n  return (\n    <div className=\"settings-item-wrapper\">\n      <ToggleButton\n        value={isActive}\n        onToggle={toggle}\n        inactiveLabel={\"Light\"}\n        activeLabel={\"Dark\"}\n      />\n      <h3 className=\"toggle-text\"> Theme </h3>\n    </div>\n  );\n}\n\nexport default ThemeToggler;\n","import { Actions } from \"../constants/actions\";\n\nexport const toggleTheme = theme => dispatch => {\n  dispatch({\n    type: Actions.Themes.SET_THEME,\n    data: theme === \"dark\" ? \"light\" : \"dark\"\n  });\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { toggleLiveExecution } from \"../../../actions/executionActions\";\nimport ToggleButton from \"react-toggle-button\";\n\nfunction ToggleLiveExecution(props) {\n  const { dispatch } = props;\n  const liveExecution = useSelector(state => state.liveExecution);\n\n  function toggle() {\n    dispatch(toggleLiveExecution(!liveExecution));\n  }\n\n  return (\n    <div className=\"settings-item-wrapper\">\n      <ToggleButton value={liveExecution} onToggle={toggle} />\n      <h3 className=\"toggle-text\"> Live </h3>\n    </div>\n  );\n}\n\nexport default ToggleLiveExecution;\n","import { Actions } from \"../constants/actions\";\n\nexport const toggleLiveExecution = value => dispatch => {\n  dispatch({\n    type: Actions.Execution.SET_LIVE_EXECUTION,\n    data: value\n  });\n};\n","export const executeCode = code => {\n  let logger = document.getElementById(\"console\");\n  logger.innerHTML = \"\";\n  try {\n    let fn = new Function(code);\n    fn();\n  } catch (err) {\n    console.log(err.name + \": \" + err.message);\n  }\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { executeCode } from \"../../../utils/execute\";\n\nfunction ExecuteButton() {\n  const code = useSelector(state => state.code);\n\n  function execute() {\n    executeCode(code);\n  }\n\n  return (\n    <div className=\"settings-item-wrapper\">\n      <button className=\"blue-btn execute-now-btn\" onClick={execute}>\n        <i className=\"fa fa-play\"></i> Run\n      </button>\n    </div>\n  );\n}\n\nexport default ExecuteButton;\n","import React from \"react\";\nimport ThemeToggler from \"./settings/ThemeToggler\";\nimport ToggleLiveExecution from \"./settings/ToggleLiveExecution\";\nimport ExecuteButton from \"./settings/ExecuteButton\";\nimport SidebarTitle from \"./item/SidebarTitle\";\n\nfunction RoomSettings(props) {\n  const { dispatch } = props;\n\n  return (\n    <>\n      <SidebarTitle icon=\"fa fa-cog\" title=\"Settings\" />\n      <div id=\"settings\">\n        <ThemeToggler />\n        <ToggleLiveExecution dispatch={dispatch} />\n        <ExecuteButton />\n      </div>\n    </>\n  );\n}\n\nexport default RoomSettings;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport UserList from \"./UserList\";\nimport RoomSettings from \"./RoomSettings\";\n\nfunction Sidebar() {\n  const roomData = useSelector(state => state.room);\n  const user = useSelector(state => state.user);\n  const dispatch = useDispatch();\n\n  const { users } = roomData;\n  const { id, userRoomInfo } = user;\n\n  return (\n    <div id=\"sidebar\">\n      <RoomSettings dispatch={dispatch} />\n      {userRoomInfo.validated && <UserList userId={id} users={users} />}\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import { Actions } from \"../constants/actions\";\n\nexport const updateCodeInStore = value => dispatch => {\n  dispatch({\n    type: Actions.Code.SET_CODE,\n    data: value\n  });\n};\n","export const overrideConsole = () => {\n  changeConsoleLog();\n};\n\nfunction changeConsoleLog() {\n  console.log = function() {\n    for (var i = 0; i < arguments.length; i++) {\n      let consoleItem = getConsoleItem(arguments[i]);\n      outputToConsole(consoleItem);\n    }\n  };\n}\n\nfunction outputToConsole(consoleItem) {\n  let logger = document.getElementById(\"console\");\n  logger.appendChild(consoleItem);\n}\n\nfunction getConsoleItem(value) {\n  let consoleItem = document.createElement(\"li\");\n  consoleItem.className = \"log-li\";\n\n  if (typeof value === \"object\") {\n    if (Array.isArray(value)) {\n      return getArrayConsoleItem(value);\n    } else {\n      return getObjectConsoleItem(value);\n    }\n  } else {\n    consoleItem.appendChild(getSpanItem(value));\n  }\n\n  return consoleItem;\n}\n\nfunction getObjectConsoleItem(obj) {\n  let listItem = document.createElement(\"li\");\n  listItem.className = \"log-li\";\n  listItem.innerHTML += \"{ \\n\";\n\n  let keys = Object.keys(obj);\n  let deep = 0;\n\n  keys.forEach((key, index) => {\n    let value = obj[key];\n\n    listItem.innerHTML +=\n      getVariableSpanInnerHTML(key) + \": \" + consoleCondition(value, deep);\n    if (keys.length - 1 !== index) {\n      listItem.innerHTML += \", \";\n    }\n    listItem.innerHTML += \"\\n\";\n  });\n  listItem.innerHTML += \"}\";\n\n  return listItem;\n}\n\nfunction getArrayConsoleItem(arr) {\n  let listItem = document.createElement(\"li\");\n  listItem.className = \"log-li\";\n  listItem.innerHTML += \"[\";\n\n  let deep = 0;\n\n  arr.forEach((value, index) => {\n    //listItem.appendChild(getSpanItem(value));\n    listItem.innerHTML += consoleCondition(value, deep);\n\n    if (arr.length - 1 !== index) {\n      listItem.innerHTML += \", \";\n    }\n  });\n  listItem.innerHTML += \"]\";\n  return listItem;\n}\n\nfunction consoleCondition(value, deep) {\n  let valueToAdd = \"\";\n  if (typeof value === \"object\") {\n    if (Array.isArray(value)) {\n      valueToAdd = getArrayConsoleItemInnerHTML(value);\n    } else {\n      valueToAdd = getObjectConsoleItemInnerHTML(value, deep);\n    }\n  } else {\n    valueToAdd = getSpanItemInnerHTML(value);\n  }\n\n  return valueToAdd;\n}\n\nfunction getArrayConsoleItemInnerHTML(arr, deep) {\n  let innerHTML = \"[\";\n  deep++;\n  arr.forEach((value, index) => {\n    innerHTML += consoleCondition(value, deep);\n    if (arr.length - 1 !== index) {\n      innerHTML += \", \";\n    }\n  });\n  innerHTML += \"]\";\n  return innerHTML;\n}\n\nfunction getObjectConsoleItemInnerHTML(obj, deep) {\n  let innerHTML = \"{ \\n\";\n\n  let keys = Object.keys(obj);\n  deep++;\n\n  keys.forEach((key, index) => {\n    let value = obj[key];\n\n    innerHTML +=\n      \"  \".repeat(deep + 1) +\n      getVariableSpanInnerHTML(key) +\n      \": \" +\n      consoleCondition(value, deep);\n    if (keys.length - 1 !== index) {\n      innerHTML += \", \";\n    }\n    innerHTML += \"\\n\";\n  });\n  innerHTML += \"  \".repeat(deep) + \"}\";\n  return innerHTML;\n}\n\nfunction getVariableSpanInnerHTML(value) {\n  return `  <span class='log-variable'>${value}</span>`;\n}\n\nfunction getSpanItem(text) {\n  let spanItem = document.createElement(\"span\");\n  spanItem.className = `log-${typeof text}`;\n  spanItem.innerHTML = typeof text === \"string\" ? \"'\" + text + \"'\" : text;\n  return spanItem;\n}\n\nfunction getSpanItemInnerHTML(text) {\n  let className = `log-${typeof text}`;\n  let value = typeof text === \"string\" ? '\"' + text + '\"' : text;\n  let span = `<span class=\"${className}\">${value}</span>`;\n  return span;\n}\n\n//export { getConsoleItem };\n","import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { executeCode } from \"../../utils/execute\";\n\nfunction Console(props) {\n  const liveExecution = useSelector(state => state.liveExecution);\n\n  useEffect(() => {\n    if (liveExecution) {\n      executeCode(props.code);\n    }\n  }, [props.code, liveExecution]);\n\n  return (\n    <div id=\"console-wrapper\">\n      <div id=\"console-title\">\n        <span id=\"console-text\"> console </span>\n      </div>\n      <div id=\"console-scroll\">\n        <ul id=\"console\"></ul>\n      </div>\n    </div>\n  );\n}\n\nexport default Console;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PrivateRoom from \"./PrivateRoom\";\nimport Sidebar from \"../sidebar/Sidebar\";\nimport { updateCodeInStore } from \"../../actions/codeActions\";\nimport { overrideConsole } from \"../../utils/output\";\nimport Console from \"../content/Console\";\n\nfunction PrivateRoomContainer() {\n  const code = useSelector(state => state.code);\n  const dispatch = useDispatch();\n\n  useEffect(overrideConsole, []);\n\n  function updateCode(code) {\n    dispatch(updateCodeInStore(code));\n  }\n\n  return (\n    <div id=\"root-layout\">\n      <Sidebar />\n      <PrivateRoom updateCode={updateCode} code={code} />\n      <Console code={code} />\n    </div>\n  );\n}\n\nexport default PrivateRoomContainer;\n","import openSocket from \"socket.io-client\";\nconst ENDPOINT =\n  window.location.hostname === \"localhost\"\n    ? \"http://localhost:5000\"\n    : \"https://codecollabs.herokuapp.com/\";\nconst socket = openSocket(ENDPOINT);\n\nfunction emitJoinRoom(name, roomId) {\n  socket.emit(\"join_room\", { roomId: roomId, name: name });\n}\n\nfunction onJoinRoom(callback) {\n  socket.on(\"join_room\", data => {\n    callback(data);\n  });\n}\n\nfunction onUserConnect(callback) {\n  socket.on(\"user_connected\", info => {\n    callback(info);\n  });\n}\n\nfunction onUserDisconnect(callback) {\n  socket.on(\"user_disconnected\", data => {\n    callback(data);\n  });\n}\n\nfunction emitTyping(code, roomId, userId, cursorCoordinates) {\n  const data = {\n    roomId: roomId,\n    info: {\n      code: code,\n      cursorCoordinates: cursorCoordinates,\n      userId: userId\n    }\n  };\n\n  socket.emit(\"typing\", data);\n}\n\nfunction onRecieveCode(callback) {\n  socket.on(\"recieve_code\", data => {\n    callback(data);\n  });\n}\n\nexport {\n  emitJoinRoom,\n  onJoinRoom,\n  onUserConnect,\n  onRecieveCode,\n  onUserDisconnect,\n  emitTyping\n};\n","import React, { useEffect } from \"react\";\nimport MonacoEditor from \"../content/MonacoEditor\";\nimport {\n  setRoomData,\n  updateUserCursorCordinates,\n  addUserToRoom,\n  removeUserFromRoom\n} from \"../../actions/roomActions\";\nimport { setUserId } from \"../../actions/userActions\";\n\nimport {\n  emitJoinRoom,\n  onUserConnect,\n  onRecieveCode,\n  emitTyping,\n  onUserDisconnect,\n  onJoinRoom\n} from \"../../utils/client-sockets\";\n\nimport { notifyWarning, notifyInfo } from \"../../utils/toaster\";\n\nfunction PublicRoom(props) {\n  const { dispatch, code, updateCode, user, roomId, room } = props;\n\n  useEffect(initializeSockets, [user.name, roomId]);\n\n  function setRoom(room) {\n    dispatch(setRoomData(room));\n  }\n\n  function addUser(user) {\n    dispatch(addUserToRoom(user));\n  }\n\n  function removeUser(user) {\n    dispatch(removeUserFromRoom(user));\n  }\n\n  function setUserIdToStore(userId) {\n    dispatch(setUserId(userId));\n  }\n\n  function initializeSockets() {\n    if (user.name && roomId) {\n      emitJoinRoom(user.name, roomId);\n      notifyInfo(\"You have joined room \" + user.userRoomInfo.roomName);\n    }\n\n    onUserConnect(user => {\n      addUser(user);\n      notifyInfo(user.name + \" joined\");\n    });\n\n    onJoinRoom(data => {\n      document.log(data);\n      setRoom(data.roomInfo);\n      setUserIdToStore(data.userId);\n    });\n\n    onRecieveCode(info => {\n      updateCode(info.code);\n      updateUserCord(info.userId, info.cursorCoordinates);\n    });\n\n    onUserDisconnect(user => {\n      removeUser(user);\n      notifyWarning(user.name + \" disconnected\");\n    });\n  }\n\n  function updateUserCord(userId, cursorCoordinates) {\n    dispatch(updateUserCursorCordinates(userId, cursorCoordinates));\n  }\n\n  function userHasChangedCode(newCode, cursorCoordinates) {\n    emitTyping(newCode, room.roomId, user.id, cursorCoordinates);\n    updateCode(newCode);\n  }\n\n  return (\n    <div id=\"content-wrapper\">\n      <div id=\"content\">\n        <MonacoEditor\n          code={code}\n          updateCode={userHasChangedCode}\n          users={room.users}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default PublicRoom;\n","import React, { useState } from \"react\";\nimport { notifyError } from \"./utils/toaster\";\n\nfunction Modal(props) {\n  const [name, setName] = useState(\"\");\n\n  const { handleOk, show } = props;\n\n  const showHideClassName = show ? \"modal display-block\" : \"modal display-none\";\n  function onClick() {\n    if (name.length > 12) {\n      notifyError(\"Your name is too long buddy! :)\");\n      return;\n    } else if (name.length === 0) {\n      notifyError(\"Please, enter your name! :) \");\n      return;\n    } else {\n      handleOk(name);\n    }\n  }\n\n  return (\n    <div className={showHideClassName}>\n      <section className=\"modal-main\">\n        <div id=\"modal-content\">\n          <div className=\"modal-section\" id=\"modal-title\">\n            <h3 id=\"modal-title-h3\"> Your name please</h3>\n          </div>\n          <div className=\"modal-section\" id=\"modal-input\">\n            <input\n              className=\"input-style  modal-input\"\n              type=\"text\"\n              value={name}\n              placeholder=\"e.g Joe Doe\"\n              onChange={e => setName(e.target.value)}\n            />\n          </div>\n          <div className=\"modal-section\" id=\"modal-btn-wrapper\">\n            <button className=\"blue-btn\" id=\"modal-btn\" onClick={onClick}>\n              Let's go!\n            </button>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default Modal;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Sidebar from \"../sidebar/Sidebar\";\nimport { validateRoom } from \"../../actions/roomActions\";\nimport PublicRoom from \"./PublicRoom\";\nimport { updateCodeInStore } from \"../../actions/codeActions\";\nimport { overrideConsole } from \"../../utils/output\";\nimport Console from \"../content/Console\";\nimport Modal from \"../../Modal\";\nimport { setUserName } from \"../../actions/userActions\";\n\nfunction PublicRoomContainer(props) {\n  const roomId = props.match.params.room;\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user);\n  const code = useSelector(state => state.code);\n  const room = useSelector(state => state.room);\n\n  const [showModal, setShowModal] = useState(true);\n\n  useEffect(overrideConsole, []);\n\n  useEffect(() => {\n    dispatch(validateRoom(roomId));\n  }, [dispatch, roomId]);\n\n  function updateCode(code) {\n    dispatch(updateCodeInStore(code));\n  }\n\n  function onModalOk(name) {\n    dispatch(setUserName(name));\n    setShowModal(false);\n  }\n\n  return (\n    <div id=\"root-layout\">\n      <Sidebar />\n      {user.userRoomInfo.validated && user.name.length > 0 && (\n        <PublicRoom\n          code={code}\n          updateCode={updateCode}\n          dispatch={dispatch}\n          roomId={roomId}\n          user={user}\n          room={room}\n        />\n      )}\n      <Console code={code} />\n      <Modal show={showModal} handleOk={onModalOk} />\n    </div>\n  );\n}\n\nexport default PublicRoomContainer;\n","import React from \"react\";\nimport Topbar from \"./components/topbar/Topbar\";\nimport { Router, Switch, Route } from \"react-router-dom\";\nimport history from \"./history\";\nimport PrivateRoomContainer from \"./components/room/PrivateRoomContainer\";\nimport PublicRoomContainer from \"./components/room/PublicRoomContainer\";\nimport { ToastContainer } from \"react-toastify\";\n\ndocument.log = console.log;\n\nfunction App() {\n  return (\n    <>\n      <Topbar />\n      <Router history={history}>\n        <Switch>\n          <Route exact path=\"/\" component={PrivateRoomContainer} />\n          <Route path=\"/:room\" component={PublicRoomContainer} />\n        </Switch>\n      </Router>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={2500}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n      />\n    </>\n  );\n}\n\nexport default App;\n","import { Actions } from \"../constants/actions\";\n\nconst themesReducer = (state = \"dark\", action) => {\n  switch (action.type) {\n    case Actions.Themes.SET_THEME:\n      return action.data;\n    default:\n      return state;\n  }\n};\n\nexport default themesReducer;\n","import { Actions } from \"../constants/actions\";\n\nconst languageReducer = (state = \"javascript\", action) => {\n  switch (action.type) {\n    case Actions.Languages:\n      return action.data;\n    default:\n      return state;\n  }\n};\n\nexport default languageReducer;\n","import { Actions } from \"../constants/actions\";\n\nconst initState = { users: [], roomName: \"\" };\n\nconst roomReducer = (state = initState, action) => {\n  switch (action.type) {\n    case Actions.Room.SET_ROOM_DATA:\n      return {\n        ...state,\n        ...action.data\n      };\n    case Actions.Room.SET_ROOM_USERS:\n      return {\n        ...state,\n        users: action.data\n      };\n    case Actions.Room.ADD_USER_TO_ROOM: {\n      return {\n        ...state,\n        users: [...state.users, action.data]\n      };\n    }\n    case Actions.Room.REMOVE_USER_FROM_ROOM: {\n      return {\n        ...state,\n        users: state.users.filter(\n          user => user.socketId !== action.data.socketId\n        )\n      };\n    }\n    case Actions.Room.UPDATE_USER_CURSOR_COORDINATES:\n      return {\n        ...state,\n        users: state.users.map(user => {\n          if (user._id === action.data.userId) {\n            return {\n              ...user,\n              cursorCoordinates: action.data.cursorCoordinates\n            };\n          }\n          return user;\n        })\n      };\n    default:\n      return state;\n  }\n};\n\nexport default roomReducer;\n","import { Actions } from \"../constants/actions\";\n\nconst User = Actions.User;\n\nconst userReducer = (\n  state = {\n    id: \"\",\n    name: \"\",\n    userRoomInfo: { validated: false, roomName: \"\" }\n  },\n  action\n) => {\n  switch (action.type) {\n    case User.SET_USER:\n      return action.data;\n    case User.SET_USER_ID: {\n      return {\n        ...state,\n        id: action.data\n      };\n    }\n    case User.SET_USER_ROOM_INFO: {\n      return {\n        ...state,\n        userRoomInfo: action.data\n      };\n    }\n    case User.SET_USER_NAME: {\n      return {\n        ...state,\n        name: action.data\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import { Actions } from \"../constants/actions\";\n\nconst executionReducer = (state = false, action) => {\n  switch (action.type) {\n    case Actions.Execution.SET_LIVE_EXECUTION:\n      return action.data;\n    default:\n      return state;\n  }\n};\n\nexport default executionReducer;\n","import { Actions } from \"../constants/actions\";\n\nconst codeReducer = (state = \"//type your code here\", action) => {\n  switch (action.type) {\n    case Actions.Code.SET_CODE:\n      return action.data;\n    default:\n      return state;\n  }\n};\n\nexport default codeReducer;\n","import { combineReducers } from \"redux\";\nimport themesReducer from \"./themeReducer\";\nimport languageReducer from \"./languageReducer\";\nimport roomReducer from \"./roomReducer\";\nimport userReducer from \"./userReducer\";\nimport executionReducer from \"./executionReducer\";\nimport codeReducer from \"./codeReducer\";\n\nconst rootReducer = combineReducers({\n  theme: themesReducer,\n  language: languageReducer,\n  room: roomReducer,\n  user: userReducer,\n  liveExecution: executionReducer,\n  code: codeReducer\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./App.css\";\nimport \"./resources/Topbar.css\";\nimport \"./resources/Sidebar.css\";\nimport \"./resources/Console.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\n\nconst middleware = [thunk];\n\nconst enhancers = compose(\n  applyMiddleware(...middleware),\n  window.__REDUX_DEVTOOLS_EXTENSION__\n    ? window.__REDUX_DEVTOOLS_EXTENSION__()\n    : f => f\n);\n\nconst store = createStore(rootReducer, enhancers);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}